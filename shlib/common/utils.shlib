#!/bin/cat
###############################################################################
# Shell Library - common/utils.shlib
#
# DO NOT EXECUTE DIRECTLY.
#
# Purpose:
#	General support functions
#
# Requires:
#	- bootstrap.shlib
#
###############################################################################
#
# Copyright 2020 Clinton Johnson
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included 
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
# DEALINGS IN THE SOFTWARE.
#
###############################################################################
#
# Example:
#
#	${PRINTF} "$(bar - 40\n"
#
###############################################################################

type printf 2>/dev/null >/dev/null
if [ $? -eq 0 ]; then
	PRINTF="printf"
else
	PRINTF="echo -en"
fi

RETURN_STRING="echo -en"
RETURN_TRUE="return 0" # DO NOT CHANGE
RETURN_FALSE="return 1" # DO NOT CHANGE

function isRoot {
	if [ "$EUID" -eq 0 ]; then
		return 0
	else
		return 1
	fi
}

function stringOfChar {

	local i
	local l_RESULT=""
	for ((i=1; i<=${2}; i++)); do
		l_RESULT+="${1}"
	done
	${RETURN_STRING} "${l_RESULT}"
}

function bar {
	${RETURN_STRING} "$(stringOfChar "$@")"
}

function filePath {
	local l_SOURCE_FULLNAME="$1"
	local l_SOURCE_PATH="${l_SOURCE_FULLNAME%/*}"; if [ "${l_SOURCE_PATH}" != "" ]; then l_SOURCE_PATH="${l_SOURCE_PATH}/"; fi
	echo "${l_SOURCE_PATH}"
}

function fileName {

	local l_SOURCE_FULLNAME="$1"
	local l_SOURCE_NAME="${l_SOURCE_FULLNAME##*/}";
	if [ $# -eq 2 ]; then
		l_SOURCE_NAME="${l_SOURCE_NAME%.*}${2}"
	fi
	echo "${l_SOURCE_NAME}"
}

function fileExt {
	local l_SOURCE_FULLNAME="$1"
	local l_SOURCE_NAME="${l_SOURCE_FULLNAME##*/}"; l_SOURCE_NAME="${l_SOURCE_NAME%.*}"
	local l_SOURCE_EXT="${l_SOURCE_FULLNAME#*.}";  if [ "${l_SOURCE_EXT}" == "${l_SOURCE_NAME}" ]; then l_SOURCE_EXT=""; fi;  if [ "${l_SOURCE_EXT}" != "" ]; then l_SOURCE_EXT=".${l_SOURCE_EXT}"; fi
	echo "${l_SOURCE_EXT}"
}
